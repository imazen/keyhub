using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml;
using KeyHub.Core.Transactions;

namespace IpnTransactionPlugin.Model
{
    public class Transaction
    {
        public TransactionPostDetails ToTransactionDetailsClass()
        {
            return new TransactionPostDetails
            {
                PurchasedSkus = new Guid[]{}, //TODO: The transaction from ejunky should contain SKU Guids
                PurchaserName = Billing.Name,
                PurchaserEmail = PayerEmail
            };
        }

        /// <summary>
        /// The vendor ID for the transaction
        /// </summary>
        public string VendorId { get; set; }
        /// <summary>
        /// The currency used for all monetary values in this transaction
        /// </summary>
        public string Currency { get; set; }
        /// <summary>
        /// Full amount of customer payment, prior to transaction fees
        /// </summary>
        public double? Gross { get; set; }
        /// <summary>
        /// Tax applied to order
        /// </summary>
        public double? Tax { get; set; }
        /// <summary>
        /// Transaction fee associated with the paymenbt.
        /// </summary>
        public double? TransactionFee { get; set; }

        /// <summary>
        /// May be the paypal billing e-mail, google checkout e-mail, or masked google checkout e-mail
        /// </summary>
        public string PayerEmail { get; set; }

        /// <summary>
        /// Transaction ID generated by payment processor (for non-PayPal txns we add a prefix: gc- for google checkout, au- for authorize.net, 2co- for 2checkout, cb- for clickbank and tp- for trialpay payments).
        /// </summary>
        public string ExternalTransactionId { get; set; }

        /// <summary>
        /// Paypal transaction type or alternate payment provider code, such as 'cart', 'web_accept','expresscheckout', 'ppdirect', 'gc_cart','authnet','cb', '2co_cart','tp','ejgift', etc
        /// </summary>
        public string TransactionType { get; set; }

        /// <summary>
        /// Pass-through invoice ID
        /// </summary>
        public string InvoiceId { get; set; }

        /// <summary>
        /// Discount codes applied to the order
        /// </summary>
        public List<string> DiscountCodes { get; set; }

        /// <summary>
        /// Original pass-through data ('custom') associated with the transaction - can be used to implement logged-in checkout 
        /// </summary>
        public string PassThroughData { get; set; }

        public List<TransactionItem> Items { get; set; }

        public DateTime PaymentDate { get; set; }

        public NameAndAddress Billing { get; set; }

        public NameAndAddress Shipping { get; set; }

        /// <summary>
        /// Xml provided by the payment processor
        /// </summary>
        public XmlDocument ProcessorXml { get; set; }

        /// <summary>
        /// Other data associated with the transaction
        /// </summary>
        public NameValueCollection Other { get; set; }
    }
}
